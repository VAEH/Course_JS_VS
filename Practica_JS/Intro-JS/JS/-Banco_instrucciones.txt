En una Busqueda, el ">-1", Siginifica que no se ha encontrado.
.push(): Con el elemento (.push) cojo el elemento y lo meto al array.
//https://www.aprenderaprogramar.com/index.php?option=com_content&view=article&id=834:funciones-arrays-javascript-push-sort-ordenar-numeros-concat-join-pop-shift-slice-splice-etc-cu01153e&catid=78:tutorial-basico-programador-web-javascript-desde-&Itemid=206
pop(): Elimina el último elemento del array y lo devuelve. 
        Ejemplo:  var ultimoElemento = A1.pop();
                  //Ahora A1 tiene 1 elemento menos

shift(): Elimina el primer elemento de un Array y lo devuelve.
        Ejemplo:   var primerElemento = A1.shift();
                    //Ahora A1 tiene 1 elemento menos.

indexOf(x) : Busca x dentro del array y devuelve la posicion de la primera ocurrencia.
        Ejemplo:   var result = A1.indexOf(14);  

splice (ind, 0, it1, it2, … , itN): Modifica el array añadiendo los elementos it1, it2, …, itN, 
                                    que son insertados en la posición ind (desplazando a los existentes).        
        Ejemplo:   A1.splice(3, 0, 'xxx', 'yyy'); //26-arrays-multi.js
                   //Inserta xxx en posición 3, yyy en posición 4 y desplaza a los elementos existentes antes.

join :  Para convertir un array a texto. Une los elementos de un array en una cadena de texto 
        donde cada elemento está separado por ‘separador’.
        Ejemplo:    var frase = ['quiero', 'aprender'].join(' ');
                    //frase es tipo String y contiene ‘quiero aprender’

.split(", ") : Convierte una cadena de texto, separada por algo en un array.
        Ejemplo: //26-arrays_multi.js

sort() : Si no recibe parámetros, ordena los elementos del array por orden alfabético 
         (que no coincide con el numérico), quedando el array modificado. Comentaremos 
         esta función con más detenimiento.
         Ejemplo:  var result = [2, 11, 111, 7].sort();
                   //result vale [11, 111, 2, 7] porque el orden es alfabético, no numérico.

for in : Explicación Pendiente

find() : devuelve el valor del primer elemento del array que cumple la función de prueba 
         proporcionada. En cualquier otro caso devuelve 'undefined'.

findIndex() : Devuelve el indice del elemento encontrado en el array en lugar de su valor.
              Si necesitas encontrar la posición de un elemento o determinar si un elemento
              existe en un array, utiliza Array.prototype.indexOf() o Array.prototype.includes().
              ejemplo en '25-arrays.js'.
some() : Comprueba si al menos un elemento del array cumple con la condicion
         implementada por la funcion proporcionada. Este método devuelve false para cualquier
         condicion puesta en un array vacío.
invertice(): Invierte el orden de una lista, en este caso, de un array por Ejemplo

.innerHTML: Devuelve o establece la sintexis del HTML, se usa para ver el codigo del HTML de la pagina actual.
                Ejemplo N°29-dom.js 

getElementById(): Seleccionar un elemento del documento por medio del valor del atributo id que se le haya asignado

.textContent: Para sacar el contenido del elemento, como por ejemplo en un "Div"
                Más informacion en el ejemplo 28-dom.js
                var todosLosDivs = document.getElementsByTagName('div');
                var contenidoEnTexto = todosLosDivs[2].textContent;
                console.log(contenidoEnTexto ); 

document.getElementsByTagName(): Devuelve una lista de elementos  con un nombre determinado 

.forEach(): Este método, ejecuta la función indicada una vez por cada elemento del array.

document.createElement(): Crea un elemento HTML especificado por su tagName.(DOM JS)

document.createTextNode(): Crea un nodo de texto. El texto a crear debe ir entrecomillado. Y de la misma manera el texto existe, pero en ninguna parte. 

.appendChild(): Agrega un nuevo nodo al final de la lista de un elemento hijo de un elemento padre especificado (Sigo Sin entender bien el concepto)

.querySelector(): Podemos obtener el primer elemento del DOM que haga match con lo que pasamos, Permite obtener los elementos  usanod la misma sintaia que aplicamos cuando creamos nuetsras reglas en CSS. 

typeof : Operador útil para determinar el tipo de una variable, o para determinar si esta variable existe en el ámbito en el que tratamos de utilizarla.
        typeof forma === 'string'
        typeof true === 'boolean'
        
append: añade despues 

preppend: añade despues //(Consultar más al respecto sobre estos conceptos).


